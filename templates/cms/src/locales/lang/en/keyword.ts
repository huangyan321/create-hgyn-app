const keyword = {
    common: {
        name: 'Name',
    },
    login: {
        welcomeLogin: 'Welcome Login',
        title: 'Smart Elderly Care Management System',
        accountPlaceholder: 'Enter Username',
        passwordPlaceholder: 'Enter Password',
        isRemember: 'Remember Username/Password',
        roleError:
            'This user is not bound to any role and cannot log in. Please contact the administrator!',
        welcomeBack: 'Welcome Back',
    },
    device: {
        device: 'device',
        deviceManage: {
            busy: 'busy',
            idle: 'idle',
            callname: 'Call name',
            directCallRoom: 'Direct call room',
            bodyTemperature: 'body temperature detection',
            gateMagnetism: 'Gate Magnetism Type',
            gateMagnetismFuntion: 'Gate Magnetism Function',
            gateMagnetismDelay: 'Gate Magnetism Delay',
            outdoorStation: 'Access control call',
            verificationMethod: 'verification method',
            validationTimeout: 'Combined validation timeout',
            deviceIpTip: 'Please enter the IP address in the correct format',
            bindingDoorLight: 'Binding door light',
            remoteCancel: 'Remote Cancel',
            sipCode: 'SIP account',
            deviceCode: 'DeviceSN',
            codeText: 'code',
            callText: 'Normal call',
            helpText: 'Requesting reinforcement',
            autoGeneration:
                'The device code is automatically generated after saving',
            policeText: 'Alarm',
            oneKeyText: 'One key',
            shuyeOffText: 'Infusion completed',
            washRoom: 'bathroom',
            chaifangText: 'Disarm',
            tizhengText: 'Signs',
            inHuli: 'Enter nursing',
            setTimeText: 'timing',
            outText: 'External',
            kongxianText: 'idle state',
            unkonwText: 'Unknown type',
            batchBtnText: 'batch',
            typeText: 'type',
            bianmaText: 'encoding',
            sipText: 'sip account',
            warningTypeText: 'warning status',
            busyStatusText: 'busy status',
            exportAllBtnText: 'Export all',
            exportSelectBtnText: 'Export selected items',
            restartBtnText: 'Restart',
            startUpBtnText: 'Boot',
            shutDownBtnText: 'Shut down',
            upText: 'Upgrade',
            roomText: 'ward',
            IpPositonText: 'IP address',
            sipPwdText: 'SIP password',
            sipId: 'SIP ID',
            positionText: 'Position',
            ifOnText: 'Is it online',
            softText: 'Version software',
            controlBtnText: 'Remote control',
            lockSrtText: 'Automatic locking duration',
            lockNumSrtText:
                'The automatic locking duration must be a number in the range of 1~9',
            composeSrtText:
                'Please fill in the combination verification timeout',
            composeNumSrtText:
                'The combined verification timeout must be a number in the range of 1~9',
            delayedStrText: 'Please fill in the door sensor delay',
            delayedNumStrText:
                'Door sensor delay must be a number in the range of 1~9',
            ziwangyanmaText: 'Subnet mask',
            wangPositionText: 'Gateway address',
            relateText: 'relate',
            opendoorpwdText: 'Opendoor password',
            ifdaipingText: 'Whether to have a screen',
            downloadSuccessTip: 'Download successful',
            shezhiSuccessTip: 'Set successfully',
            optionwill: 'This operation will be done in batches',
            ifcontinue: 'Device, whether to continue',
            optionwillup: 'This operation will upgrade the device code to ',
            ifcontinue1: ' The device, continue? ',
            successup: 'Successfully notified device upgrade!',
            monday: 'Monday',
            tuesday: 'Tuesday',
            wednesday: 'Wednesday',
            thursday: 'Thursday',
            friday: 'Friday',
            saturday: 'Saturday',
            sunday: 'Sunday',
            upgradeLimitTip: 'Please select the data to export first! ',
            pleaseChoose: 'Please choose first',
            isDevice: 'Device! ',
            deviceCodeIs: 'The device code is',
            pleaseChooseUpgradeDev:
                'Please choose the device to be upgraded first! ',
            upgradeSuccessTip: 'Upgrade successful! ',
            pleaseChooseDeleteData:
                'Please choose the data to be deleted first! ',
            deviceStatus: 'device status',
            roomNo: 'room number',
            areaName: 'area name',
            screenSetting: 'Screen settings',
            autoJudge: 'Automatic adjustment',
            light: 'brightness',
            nearTake: 'Wake up nearby',
            screenSave: 'screen saver',
            screenSaveTime: 'screen saver time',
            screenSaveTimeTip:
                '(Note: the screen saver time can only be entered from 1 to 30, unit: minutes)',
            stopRestScreen: 'Screen off in standby',
            restScreenTimes: 'Screen off time period',
            voiceSetting: 'Volume Setting',
            toVoice: 'Intercom volume',
            deviceSet: 'Device settings',
            openTimeSet: 'Normally open period setting',
            pleaseDeleteRow: 'Please select the row to be deleted! ',
            checkTabComplete:
                'Please check whether the information on each tab page is complete! ',
        },
        deviceType: {
            deviceTypeCode: 'Device type code',
            deviceTypeId: 'device type',
            deviceTypeName: 'Device type name',
            remark: 'Description',
            remarkDetail:
                'Please enter a description, the number of characters should not exceed 300',
        },
        version: {
            uploadDevVersion: 'Upload device version',
            versionName: 'version name',
            filePath: 'file address',
            fileType: 'file type',
            systemType: 'system type',
            upload: 'upload',
            dragTip: 'Click or drag to upload, please upload',
            typeLimitTip1: '.zip or .img or .bin or .rbl',
            typeLimitTip2: '.zip or .img',
            file: 'file',
            filePathPlaceholder:
                'Please select the file type before uploading. The file address will be automatically filled in after the upload is successful',
            versionNamePlaceholder:
                'Please enter the version name, the number of characters should not exceed 100',
            remark: 'Update content',
            remarkPlaceholder:
                'Please enter the update content, the number of characters should not exceed 500',
            beforeUploadTip: 'Please select the file type first',
            errorTip:
                'The software package format cannot be adapted to the selected file type! ',
            errorTip1: 'The uploaded file type is wrong, please upload again! ',
            pleaseUploadFile: 'Please upload file',
        },
        deviceSet: {
            screenText: 'screen',
            openText: 'Bright screen',
            offText: 'Turn off the screen',
            langText: 'corridor screen',
            optionwillxiafa:
                'This operation will deliver the device, do you want to continue?',
            voice: 'volume',
            timeduan: 'time period',
            tishiText: 'prompt',
            timeError: 'Time periods overlap, please choose again! ',
            openandofftime: 'Screen on time and screen off time!',
            erroropenoff:
                'The screen on or off time format is incorrect, please choose the correct format such as 05:20',
            startText: 'start',
            endText: 'End',
            errorlang:
                'The difference between the screen on time and the screen off time set by the corridor screen cannot exceed 20 hours! ',
            errorlang1:
                'The time interval between turning on and off the screen does not exceed 20 hours! ',
            errornighttime:
                'The format of the night time period is incorrect, please select the correct format such as 05:20',
            noemptyText: 'cannot be empty',
            pingbao: 'screensaver',
            night: 'night',
            dark: 'day',
            media: 'Media',
            call: 'call',
            bobao: 'Voice broadcast',
            voiceBroadcast: 'Voice broadcast volume',
            voiceBroadcastTip:
                ' (Volume setting of the voice broadcast in the call pop-up window)',
            zhenling: 'ring tone',
            ringSoundColumn: 'Ring sound volume',
            ringSoundColumnTip:
                ' (ring sound volume setting in the call pop-up window)',
            lighttiaojie: 'Brightness adjustment',
            nightType: 'night',
            remark: '(Note: The screen saver time can only be entered from 1 to 30, unit: minutes)',
            shuaka: 'swipe card',
            loginModel: 'Login method',
            personRemark:
                'Accurate identity authentication to avoid misoperation or malicious operation accidents. ',
            MedicalAuthority: 'Medical authority',
            ImproveNursing: 'Improve nursing efficiency! ',
            simpleWorkstatio: 'Provide a simple medical workstation',
            openposition: 'Open nursing positioning',
            autoposition:
                'You can automatically enter the nursing position after identity recognition',
            brightScreen: 'Linked bedside machine bright screen',
            fromOpenToOff:
                'After identification, the bedside opportunity in the ward changes from the off screen to the on screen',
            MedicalStationConfiguration: 'Medical Station Configuration',
            MedicalWork: 'Medical Work',
            login: 'Login',
            useFace: 'Swipe face',
            defenseArea: 'Defence Area',
            interface: 'interface',
            devSet: 'Device configuration',
            launchDev: 'Delivery device',
            launchWarningTip:
                'This operation will deliver the device, do you want to continue? ',
            launchSuccess: 'Delivery successful! ',
            defaulTipMessage: "Please don't make any noise! ",
            checkTip:
                'Please check whether the required information on the tab page is filled in! ',
            devSetErrorTip1: 'The time period cannot be empty! ',
            voiceSet: 'Volume setting',
            screenSet: 'Screen settings',
            times: 'time period',
            corridorBrightStartTime: 'Bright screen time',
            corridorBrightEndTime: 'Screen off time',
            tipMessage: 'Corridor screen prompt',
            dayBright: 'Screen adjustment',
            dayScreenSaverTime: 'screen saver time',
            onScreenTime: 'Screen time',
            offScreenTime: 'Screen off time',
            nightMode: 'Night mode',
            nightBright: 'Screen adjustment',
            nightScreenSaverTime: 'screen saver time',
            soundSwitch: 'mute',
            callSound: 'call volume',
            voiceBroadcastSound: 'Voice broadcast',
            messageSound: 'Message ringtone',
            operationSound: 'Operation/key ringtone',
            securityAlarmType: 'Security Alarm',
            securityAlarmTypeForDefault: 'Default alarm',
            securityAlarmTypeForVoice: 'Voice broadcast',
            autoBrightSwitch: 'Automatic adjustment',
            bright: 'brightness',
            nearbyWakeUpSwitch: 'Wake up nearby',
            screenSaverSwitch: 'screensaver',
            screenSaverTime: 'screen saver time',
            offScreenSwitch: 'Screen off in standby',
            offScreenStartTime: 'Screen off time period',
            nightBeginTime: 'Night time period',
            tipSound: 'Tip volume',
            dayMediaSound: 'Daytime media volume',
            nightMediaSound: 'Night media volume',
            beginNotEqEnd: 'The starting time periods cannot be the same',
            doorScreenTip:
                'The starting time period cannot be within the range of other time periods! ',
            doorScreenTip1:
                'The start time period overlaps with other start time periods! ',
            doorScreenTip2:
                'The end time period cannot be within other time periods! ',
            doorScreenTip3:
                'The end time period cannot include other time periods! ',
            doorScreenTip4: 'The time periods overlap, please choose again! ',
        },
        rs485: {
            keyType: 'Key type',
            updateDevStatus: 'Update device status',
            doorLightStatusTest: 'Door light status test',
            linkDeviceName: 'Associated device',
            isSwipeCard: 'Whether to enable card swiping',
            pleaseChooseThisKeyTypeLinkDevTip:
                'Please choose the device associated with this key',
            callCheckTip:
                'The calling device (call/bathroom alarm) must carry the bed number! ',
            roomNumber: 'room number',
            doorLightTestOpen: 'Open door light test',
            doorLightTestClose: 'Close door light test',
            operationSuccess: 'Operation successful! ',
            pleaseOpenDoorLight:
                'Please select the data to open the door light test first!',
            pleaseChooseExportData: 'Please choose the data to export first! ',
            physicalAddress: 'physical address',
            deviceCode: 'DeviceSN',
            isOnline: 'Device status',
            devicePlace: 'Device location',
            errorTip:
                'Call equipment (call/bathroom alarm) must carry the area name! ',
        },
    },
    elder: {
        peopleName: "Old man's name",
        nursingLevelId: 'service level',
        peopleType: 'elderly type',
        peopleInTime: 'Check-in time',
        checkTip:
            'Check whether the information on each Tab page is completed! ',
        checkTip1: 'Please upload the front and back photos of your ID card! ',
        checkTip2: 'Please check whether the family information is complete! ',
        checkTip3:
            'Please fill in the previous contact person completely first! ',
        kinsfolkAddress: 'residential address',
        kinsfolkIdCard: 'ID card number',
        kinsfolkName: 'family name',
        age: 'age',
        kinsfolkRelation: 'family relationship',
        kinsfolkTelephone: 'Contact number',
        baseInfo: 'Basic information',
        peopleBirthday: 'birth year',
        peopleAge: 'Age',
        peopleAgeTip:
            'Automatically calculated after selecting the year and month of birth',
        peopleSex: 'gender',
        peopleNation: 'nation',
        peoplePoliticsAffiliation: 'Political Affiliation',
        peopleMaritalStatus: 'marital status',
        peopleEducation: 'education level',
        socialSecurityCardNumber: 'Social Security Card Number',
        peopleAddress: 'original residential address',
        peopleAddressTip: 'District Road (Village)/Alley/No./Room',
        peopleCensusRegister: 'Hukou location',
        peopleNotes: 'Notes',
        peoplePicture: "old man's avatar",
        uploadTip:
            'Only jpg/jpeg/png files can be uploaded, and no more than 10M',
        frontOfIdCard: 'ID card photo',
        front: 'front',
        back: 'back',
        familyInfo: 'family information',
        addFamily: 'Add family',
        withElderRelation: 'Relationship with the elderly',
        roomInfo: 'room information',
        bindDev: 'Device binding',
        wristbandSsid: 'wristband SSID',
        one: '一',
        two: '二',
        three: '三',
        pay: 'expense situation',
        service: 'Service item',
    },
    template: {
        templateDesign: {
            doorTemplateOne:
                'Door door station template one_with carousel picture',
            doorTemplateTwo: 'Door station template two_default',
            programContent: 'Program content',
            editTemplate: 'Edit template',
            templateId: 'template ID',
            templateName: 'template name',
            system: 'system',
            templateType: 'template type',
            analysisType: 'Analysis type',
            templateInfo: 'template information',
            pleaseChooseCellTip: 'Please select the component! ',
            frontPage: 'Home',
            setting: 'setting',
            verticalScreen: '_vertical screen',
            horizontalScreen: '_horizontal screen',
            nullBed: 'empty bed',
            specicalTip: 'Anti-pressure ulcer',
            selectOneTip:
                'The picture replacement process only supports single selection! ',
            clearDrawerTip:
                'Switching the applicable system at this time will clear all the contents of the current canvas. Do you want to continue?',
            page1: 'Page 1',
            mainPage: 'Homepage',
            moreElement: 'More components',
            totalCell: 'all components',
            templateLib: 'template library',
            copy: 'copy',
            paste: 'paste',
            cancelSelect: 'cancel',
            inPadding: 'Padding',
            outPadding: 'Outer margin',
            spacing: 'spacing',
            horizontalText: 'Horizontal text direction',
            verticalText: 'vertical text direction',
            templateDesign: 'template design',
            componentList: 'component list',
            pageList: 'Page List',
            selectCopyTip: 'Please select the component to be copied! ',
            select: 'select',
            circularInterval: 'Carousel interval',
            content: 'content',
            change: 'change',
            up: 'Move up',
            down: 'move down',
            ifDialog: 'Whether the pop-up window is displayed',
            ifAuto: 'Whether it is adaptive',
            changePic: 'Replace picture',
            selectUpTip: 'Please select the upper level parameter key first! ',
            typeText: 'type',
            className: 'class name',
            logo: 'logo',
            picture: 'picture',
            modules: 'module',
            doctor: 'Doctor',
            policeText: 'Alarm',
            function: 'function',
            callname: 'call',
            temp: 'temperature',
            relativeHumid: 'Humidity',
            whetherRender: 'whether to render',
            show: 'show',
            color: 'color',
            paramKey: 'parameter key',
            nurse: 'nurse',
            width: 'width',
            height: 'high',
            level: 'Level',
            background: 'background',
            textColor: 'text color',
            lineHeight: 'line height',
            crossLine: 'cross line',
            transparency: 'transparency',
            sizeAlias: 'font size',
            thickening: 'bold',
            arrangementText: 'arrange',
            horizontal: 'horizontal',
            vertical: 'vertical',
            align: 'align',
            left: 'left',
            right: 'right',
            top: 'top',
            bottom: 'bottom',
            center: 'center',
            text: 'text',
            switchInterval: 'Switching interval (seconds)',
            resourcesPosition: 'resources',
            upload: 'upload',
            element: 'element',
            hide: 'Hide',
            no: 'no',
            wrap: 'across lines',
            networkError:
                'Failed to connect to server! Please check the network! ',
            uploadingResource: 'Resource uploading...',
            cannotlarger: 'The file cannot be larger than 10G.',
            component: 'component',
            leaflets: 'leaflets',
            single: 'single',
            video: 'video',
            static: 'static',
            dynamic: 'dynamic',
            resolution: 'resolution',
            zoom: 'zoom',
            canvas: 'canvas',
            region: 'region',
            rules: 'rules',
            determine: 'determine',
            dataEmpty: 'Data is empty!',
            viewRulesAlias: `<h1 id="Design Guide">Design Guide</h1> <ol> <li> <p> In template design, you can control various common attributes such as width, height, displacement, font size, color, etc. of each element. After saving, the settings will be synchronized to the device, and the device will reload the latest configuration the next time it automatically refreshes the data; </p> </li> <li> <p> Supports right-clicking to copy, paste, and delete components; < /p> </li> <li> <p> The ID/class names of elements are mainly named in English. For example, hospital logo (hosLogo) and patient gender (patientSex) will be used as positioning identifiers on the device side and will be automatically rendered according to rules. Replace the parameter value obtained by the actual interface. `,
            templateJson: 'Template content must be in JSON format!',
            horseRacing: 'marquee',
            new: 'new',
            carousel: 'carousel',
            click: 'click',
            template: 'template',
            applicableSystem: 'Applicable system',
            themeColor: 'theme color',
            analysis: 'analysis',
            banshi: 'Format',
            percentage: 'percent',
            design: 'design',
            pleaseFill: 'Please fill in',
            templateEmpty: 'The template content is empty!',
            di: 'th',
            page: 'page',
            layout: 'layout',
            currentPage: 'Current page',
            header: 'head',
            submenuItem: 'Submenu item',
            allchoose: 'Select all',
            menu: 'menu',
            yemian: 'page',
            situation: 'overview',
            patient: 'patient',
            total: 'total number',
            highRisk: 'High risk management',
            nusringInfo: 'nursing information',
            patientCatheter: 'Patient Catheter',
            interSurgeyInfo: 'interventional surgery information',
            patientReminder: 'Patient Reminder',
            memorandum: 'memo',
            inspection: 'Appointment inspection',
            dutyInfo: 'Duty information',
            specicalMedical: 'Special medication',
            maxPage: 'The maximum number of pages is 5! ',
            delectPage:
                'This operation will delete the current page, do you want to continue?',
            addBtn: 'Add successfully',
            deelectSelect: 'Are you sure you want to delete the selected item?',
            // 4.4.2 New requirements
            templateTip: 'Please fill in the basic template information below',
            templateTip1: 'Template loading',
            resourceLib: 'resource library',
            designArea: 'design area',
            redo: 'withdraw',
            clearDrawer: 'Clear canvas',
            viewRules: 'View rules',
            tracelessMode: 'Incognito mode',
            traceMode: 'trace mode',
            resourceStyles: 'Component style',
            resourceAttr: 'attribute',
            changeWay: 'switch',
            positionAndSize: 'Position and size',
            rotate: 'rotate',
            padding: 'margin',
            fontAndLine: 'Text and typesetting',
            italic: 'italic',
            trickout: 'strikethrough',
            underline: 'underline',
            flexRowStart: 'Horizontal top',
            flexRowCenter: 'Horizontal center',
            flexRowBottom: 'Horizontal bottom',
            flexRowBetween: 'Align both ends',
            flexColumnStart: 'vertically on top',
            flexColumnCenter: 'vertically centered',
            flexColumnBottom: 'Vertical bottom',
            whiteSpace: 'Whether not to wrap',
            fill: 'fill',
            boxShadow: 'Shadow',
            zIndex: 'Level',
            border: 'border',
            borderWidth: 'Thickness',
            borderView: 'Visibility',
            borderRadius: 'rounded corners',
            bedOverFive: 'Five beds and above',
            templateStyleTip: '0 ratio lock is not supported yet',
            templateResourceTip: 'The door station has at most one bed list',
            templateResourceTip1:
                'This operation will clear all resources in the current canvas, do you want to continue?',
            templateResourceTip2:
                'Only supports uploading jpg/png/jpeg files and does not exceed 10MB',
            templateResourceTip3: 'Please select a file! ',
            templateTextResourceInputTip: 'Please enter text',
            levelParamKey: 'level parameter key',
            templateStyleAttrTip:
                'Automatically enter the module name after selecting it',
            templateModuleName: 'template name',
            marginLeft: 'Left margin',
            marginTop: 'top margin',
            marginRight: 'Right margin',
            marginBottom: 'Bottom margin',
            currentContent: 'Current content',
            overflow: 'scroll',
            renderWay: 'rendering method',
            interactionWay: 'interaction way',
            editorBed: 'Edit bed',
            flexforRow: 'horizontal',
            flexforColumn: 'vertical',
            overflowforHidden: 'Never scroll',
            overflowXforAuto: 'x-axis scrolling',
            overflowYforAuto: 'y-axis scrolling',
            baseRules: 'Basic rules',
            nurseCareImage: 'nursing',
            airImage: 'air',
            noiseImgae: 'noise',
            bedCardImage: 'bedside card',
            reinforcementImage: 'reinforcement',
            birthdayImage: 'birthday',
            qrCodeImage: 'QR code',
            templateResourceUnit: 'element',
            templateResourceText: 'Text',
            templateResourceTextarea: 'text',
            templateResourceRectangle: 'rectangle',
            templateResourceOval: 'Ellipse',
            templateResourceTransverseLine: 'horizontal line',
            templateResourceVerticalLine: 'vertical line',
            templateResourceCombination: 'combination',
            templateResourceCareLabel: 'Care label',
            templateResourceBedList: 'bed list',
            templateResourceBedListAttrChangeBtn: 'Switch single bed attribute',
            pasteBtn: 'paste',
            templateResourceBedListTip:
                'Copy failed, the canvas of this page is empty! ',
            templateResourceBedListTip1: 'Copy successfully! ',
            templateResourceBedListTip2:
                'Paste failed, please copy the canvas first! ',
            templateResourceBedListTip3:
                'This operation will overwrite the current page canvas content. Do you want to continue? ',
            templateResourceBedListTip4:
                'The template of each bed cannot be empty! ',
            templateResourceBedListTip5: 'Only 10 pages can be added at most! ',
            templateResourceBedListTip6: 'At least 1 page! ',
            bedHeadOne: 'Bedside machine template one',
            bedHeadOneforNew: 'Bedside card template one_new version',
            bedHeadTwo: 'bedhead machine template two',
            bedHeadThree: 'Bedside machine template three',
            bedHeadFour: 'Bedside machine template four',
            bedHeadFive: 'Bedside machine template five',
            bedHeadSix: 'Bedside machine template six',
            bedHeadSeven: 'Bedside machine template seven',
            bedHeadEight: 'Bedside machine template eight',
            doorTemplateOneforHori:
                'Door station template one_horizontal screen',
            doorTemplateOneforVer:
                'Door door station template one_vertical screen',
            doorTemplateTwoforHori:
                'Door station template two_horizontal screen',
            doorTemplateTwoforVer: 'Door station template two_vertical screen',
            doorTemplateThreeforHori:
                'Door station template three_horizontal screen',
            doorTemplateThreeforVer:
                'Door station template three_vertical screen',
            bedSideOne: 'bedside machine template one',
            bedThree: 'Three beds',
            bedFoue: 'Four beds',
            bedFive: 'Five beds and above',
            allergy: 'allergy',
            vrName: 'Wang Moli',
            vrName1: 'Nurse Zhang',
            vrName2: 'Doctor Wang',
            vrName3: 'First level care',
            vrName4: 'Male',
            preventSores: 'Prevent pressure sores',
            image: 'picture',
            singleBed: 'Single bed',
            module: 'module',
            room: 'room',
            nameExample: 'Jane Doe',
            address: 'Address: ',
            phone: 'Phone: ',
            road: 'XX road',
            introduction: 'Introduction to Palace',
        },
        metaData: {
            templateMetaData: 'Template Metadata',
            maintain: 'Maintenance',
            firstLevel: 'Level One',
            SecondaryLevel: 'Level Two',
            threeLevel: 'Level Three',
            specical1: 'Level Parameter Key or',
            specical2: 'Level Parameter Key Name',
            newRemark: 'Remark Explanation',
            paramName: 'Parameter Name',
            inputParamName: 'Please enter the parameter key name',
            remark: 'Please enter the remark explanation, up to 300 characters',
            inputUrl: 'Please enter URL',
            operateSuccess: 'Operation successful!',
        },
    },
    main: {
        welcome: 'Welcome to the Intelligent Elderly Care Management System',
    },
    system: {
        menu: {
            menuName: 'Menu Name',
            menuIcon: 'Menu Icon',
            menuType: 'Menu Type',
            sort: 'Menu Sorting',
            remark: 'Menu Description',
            previousMenu: 'Parent Menu',
            level1Menu: 'Level 1 Menu',
            level2Menu: 'Level 2 Menu',
            level3Menu: 'Level 3 Menu',
            remarkPlaceholder:
                'Enter menu description, not exceeding 300 characters',
        },
        user: {
            userPic: 'Avatar',
            userRealname: 'User Name',
            userType: 'User Type',
            userSex: 'Gender',
            userName: 'Login Name',
            userOutNo: 'Employee ID',
            userPassword: 'Password',
            role: 'Role',
            userDuty: 'Position',
            remark: 'User Introduction',
            createTime: 'Creation Time',
            editPassword: 'Change Password',
            oldPassword: 'Old Password',
            newPassword: 'New Password',
            loginTime: 'Login Time',
            loginCount: 'Login Count',
            lastLoginTime: 'Last Login Time',
            operationRecord: 'Operation Record',
            controlTime: 'Operation Time',
            requestMethod: 'Call Location',
            requestParam: 'Details',
            newPasswordAgain: 'Enter New Password Again',
            remarkPlaceholder:
                'Enter user introduction, not exceeding 300 characters',
            newPasswordAgainPlaceholder: 'Enter new password again',
            resetPasswordComfirm:
                'This operation will reset the password to 123456, continue?',
            resetPasswordSuccess: 'Password reset successful!',
            modifyPasswordError: 'Two password inputs do not match!',
        },
        role: {
            addUser: 'Add User',
            unbind: 'Unbind',
            roleName: 'Role Name',
            roleCode: 'Role Code',
            remark: 'Role Description',
            createTime: 'Create Time',
            unbindTip:
                'The following users are bound to this role. Please unbind them first before deleting the role.',
            unbindConfirm:
                'Are you sure you want to unbind the currently selected user? After unbinding, you need to reassign a role to the user to ensure normal login.',
            deleteConfirm:
                'Users related to this role have been unbound. Are you sure you want to delete this role? This action will permanently delete the data.',
            remarkPlaceholder:
                'Please enter the role description, with a character limit of 300.',
            userList: 'User List',
            added: 'Added',
        },
        permission: {
            roleList: 'Role List',
            menuPermission: 'Menu Permission',
            permissionManage: 'Permission management',
            operationPermission: 'Operation Permission',
            setTip: 'Please click the "Operation Permission" button in the left menu to configure the corresponding operation permissions for the menu.',
        },
        serviceLevel: {
            levelName: 'Service Level Name',
            weight: 'Weight',
            color: 'Color Code',
            remarkPlaceholder:
                'Please enter remarks, with a character limit of 300.',
        },
        logo: {
            logoName: 'Logo Name',
            logoSize: 'Logo Size',
            logoImg: 'Image',
            logoSrc: 'Logo Address',
            upload: 'Upload Logo',
            logoSizeTip:
                '(Enter width and height in order, separated by "x", for example, 1920x1080)',
            logoSrcPlaceholder: 'Automatically filled in after logo upload',
            remarkPlaceholder:
                'Please enter remarks, with a character limit of 300.',
        },
        systemParameter: {
            paramKey: 'Parameter Key',
            paramName: 'Parameter Name',
            paramValue: 'Parameter Value',
            paramType: 'Parameter Type',
            all: 'All',
            expand: 'Expand',
            unExpanded: 'Collapse',
            paramKeyPlaceholder: 'Parameter Key',
            paramNamePlaceholder: 'Parameter Name',
            remarkPlaceholder:
                'Please enter remarks, with a character limit of 300.',
        },
        dictionary: {
            dictValue: 'Dictionary Value',
            addNewDictValue: 'Add New Dictionary Value',
            dictType: 'Dictionary Type',
            dictTypeName: 'Dictionary Type Name',
            dictCode: 'Dictionary Value Code',
            remark: 'Explanation',
            dictTypeNamePlaceholder: 'Dictionary Type Name',
            remarkPlaceholder:
                'Please enter explanations, with a character limit of 300.',
        },
    },
    iot: {
        gateway: {
            activePower: 'instantaneous power',
            currentSum: 'electricity statistics',
            windDirection: 'wind direction',
            syncGateway: 'sync gateway',
            colorTemperature: 'color temperature',
            noise: 'Noise',
            illuminance: 'Illuminance',
            range: 'Range',
            humidity: 'Humidity',
            defenseTip:
                'Note: Alarm will be triggered when any of these conditions are met',
            defenseTip2: 'Please check if the data is filled in correctly',
            pleaseCheckData: 'Please check the data',
            floor: 'Floor',
            area: 'Area',
            building: 'Building',
            lowPower: 'Low Power',
            tamper: 'Tamper',
            eventSetting: 'Event Settings',
            areaName: 'Area Name',
            channelNo: 'Channel No',
            deviceCodeAlias1: 'Device Code',
            deviceCodeAlias1Tip:
                'Device code will be generated automatically after saving',
            scene: 'Scene',
            device: 'Device',
            bindDevice: 'Bind Smart Care Terminal',
            ip: 'IP Address',
            deviceStatus: 'Device Status',
            roomNumber: 'Room Number',
            deviceCode: 'Device SN',
            gatewaySetting: 'Gateway Configuration',
            powerTip: 'Please turn on the power',
            executing: 'Executing',
            executeSuccess: 'Execution Successful!',
            executeFailure: 'Execution Failed!',
            executeOver: 'Execution Timeout!',
            airConditionDisplay: 'Air Conditioner Display',
            event: 'Event',
            alarm: 'Alarm',
            isCall: 'Call',
            offSwing: 'Turn Off Swing',
            onSwing: 'Turn On Swing',
            lateralSweep: 'Horizontal Swing',
            longitudinalSweep: 'Vertical Swing',
            auto: 'Auto',
            refrigeration: 'Cooling',
            calefaction: 'Heating',
            blow: 'Blow',
            dehumidification: 'Dehumidification',
            lowSpeed: 'Low Speed',
            midSpeed: 'Medium Speed',
            highSpeed: 'High Speed',
            concnHCHO: 'Formaldehyde',
            updateSuccessTip: 'Change Successful',
            time: 'Time',
            deviceSubnetMaskTip: 'Please enter the correct subnet mask format',
            deviceGatewayAddressTip:
                'Please enter the correct gateway address format',
            deviceIpTip: 'Please enter the correct IP address format',
            deviceGatewayAddress: 'Gateway Address',
            deviceSubnetMask: 'Subnet Mask',
            deviceIp: 'IP Address',
            network: 'Network',
            model: 'Mode',
            select: 'Select',
            execute: 'Execute',
            action: 'Action',
            sceneNo: 'Scene Number',
            sceneName: 'Scene Name',
            room: 'Room',
            type: 'Type',
            deviceNo: 'Device Number',
            inputtongdao: 'Channel Number',
            windSpeed: 'Wind Speed',
            temp: 'Temperature',
            on: 'On',
            off: 'Off',
            pause: 'Pause',
            deviceTypeId: 'Device Type',
            brightness: 'Brightness',
            choose: 'Choose',
            deviceName: 'Device Name',
            roomName: 'Room',
            deviceIotNo: 'Gateway Account',
            gatewayDeviceManageTip:
                'This operation will clear existing devices, scenes, and linkage data. Continue?',
            gatewayDeviceManageTip1:
                'Changing the floor or gateway account will initialize the gateway. Continue?',
            gatewayDeviceManageTip2:
                'Restoring to factory settings will clear existing devices, scenes, and linkage data. Continue?',
            gatewayDeviceManageTip3:
                'This operation will clear the device and its associated data. Continue?',
            resetGwFactory: 'Restore to Factory Settings',
            deviceModel: 'Gateway Model',
            deviceSerial: 'Device Serial Number',
            deviceSysVersion: 'System Version',
            deviceCoordinatorVersion: 'Coordinator Version',
            deviceIotNoAlias: 'IOT Gateway Account',
            operateSuccess: 'Operation Successful',
            ntpAddress: 'NTP Server Address',
            ntpAddressTip: 'Please enter the correct NTP server address',
            ntpPort: 'NTP Server Port',
            ntpPortTip: 'Please enter the correct NTP server port',
            openAccess: 'Enable Access',
            openAccessTip: 'Access enabled successfully',
            closeAccess: 'Disable Access',
            closeAccessTip: 'Access disabled successfully',
            panelNums: 'Channel Count',
            editConfig: 'Edit Configuration',
            interfaceOverView: 'Interface Overview',
            isDynamicIp: 'Dynamic Address',
            isDynamicIpAlias: 'Dynamic IP',
            deviceDomainAddress: 'Domain Address',
            deviceDomainAddressTip:
                'Please enter the correct domain address format',
            devicePhysicalAddress: 'Physical Address',
            canPort: 'Port',
            canBps: 'Baud Rate',
            wlanIsEnable: 'Enable',
            wlanUser: 'WIFI Hotspot',
            wlanPassword: 'WIFI Password',
            gateWayRoomTip: 'This room already has the same scene name',
            gateWayRoomTip1:
                'The same scene name cannot exist in the same room',
            linkage: 'Linkage',
            areaTime: 'Area/Time',
            about: 'About',
            linkageName: 'Linkage Name',
            condition: 'Condition Type',
            loading: 'Loading',
            bindDeviceNumTip: 'Bind Device Count',
            gateWaySceneTip: 'No devices, scene addition not supported',
            gateWaySceneTip1:
                'This operation will clear the scene and its associated data. Continue?',
            gateWaySceneTip2: 'Temperature should be between 16-30℃',
            gateWaySceneTip3: 'Temperature should be between 25-35℃',
            gateWaySceneTip4: 'Adjustment progress should be between 0-100',
            gateWaySceneTip5: 'Dimming value should be between 3000-6000',
            gateWaySceneTip6: 'Brightness value should be between 0-100',
            gateWaySceneTip7:
                'Failed to add, a maximum of 300 devices can be added!',
            gateWaySceneTip8:
                'No execution devices selected, scene will be deleted. Continue?',
            gateWaySceneTip9:
                'Execution devices are empty, please add execution devices before saving',
            linkArea: 'Link Area',
            iotArea: 'Area',
            choiceBindDevice: 'Choose Bind Device',
            delayed: 'Delayed',
            moreSetting: 'More Settings',
            devFlag: 'Flag',
            alreadyChoose: 'Already Chosen',
            editOrAdd: 'Edit/Add',
            panelOne: 'Channel 1',
            baudrate: 'Baud Rate',
            databits: 'Data Bits',
            parity: 'Parity',
            stopbits: 'Stop Bits',
            addr485: '485 Address',
            code485: 'Code',
            deviceFor485: '485 Device',
            onOff: 'On/Off',
            onOffPause: 'On/Off/Pause',
            CurtainTrack: 'Curtain Track Measurement',
            alarmMode: 'Alarm Mode',
            defence: 'Arm',
            withdrawDefence: 'Disarm',
            panel: 'Channel',
            infrare: 'Distance',
            radioPower: 'Transmit Power',
            lowLevel: 'Low',
            middleLevel: 'Medium',
            highLevel: 'High',
            backlightBright: 'Backlight Brightness',
            irDistance: 'Distance',
            cmFor80: '80 cm',
            cmFor50: '50 cm',
            callOut: 'Call Out',
            infusionOut: 'Infusion Complete',
            bathroomAlarm: 'Bathroom Alarm',
            gateWayDeviceTip: 'Curtain track measurement successful!',
            gateWayDeviceTip1: 'Command sent successfully!',
            gateWayDeviceTip2: 'Operation successful!',
            gateWayDeviceTip3:
                'Please check if the information for each channel on the panel is complete before saving!',
            gateWayDeviceTip4:
                'This operation will clear the device and its associated data. Continue?',
            curtainTrackRatio: 'Curtain Track Ratio',
            addDevice: 'Add Device',
            linkageNo: 'Linkage Number',
            gateawyLinkageTip: 'No devices, linkage addition not supported',
            gateawyLinkageTip1: 'Temperature range is 0~50%',
            gateawyLinkageTip2:
                'Temperature front and rear ranges should be different',
            gateawyLinkageTip3: 'Humidity range is 0~100%',
            gateawyLinkageTip4:
                'Humidity front and rear ranges should be different',
            gateawyLinkageTip5:
                'Existing scenes already exist, please add directly',
            gateawyLinkageTip6: 'Are you sure you want to delete this data?',
            gateawyLinkageTip7:
                'Failed to add, only two different condition types can be added at most!',
            gateawyLinkageTip8: 'Please select a condition type!',
            gateawyLinkageTip9: 'Only one time condition can be set!',
            gateawyLinkageTip10:
                'Failed to add, a maximum of 5 devices can be added!',
            gateawyLinkageTip11:
                'No trigger devices or timing set, clearing the linkage and its associated data. Continue?',
            gateawyLinkageTip12:
                'Execution devices and existing scenes are empty, please add one before saving',
            gateawyLinkageTip13:
                'Trigger devices and timing are empty, please add one before saving',
            gateawyLinkageTip14:
                'No trigger conditions set, clearing the linkage and its associated data. Continue?',
            gateawyLinkageTip15:
                'This operation will clear the linkage and its associated data. Continue?',
            meetCondition: 'Meet Condition',
            timing: 'Timing',
            havePeople: 'Have People',
            notHavePeople: 'No People',
            trigger: 'Trigger',
            clockInner: 'Within Time Period',
            clockOuter: 'Outside Time Period',
            clockPoint: 'Time Point',
            cycleTime: 'Cycle Period',
            curExistScene: 'Existing Scenes',
            executeType: 'Execution Type',
            mon: 'Monday',
            tues: 'Tuesday',
            wed: 'Wednesday',
            thur: 'Thursday',
            fri: 'Friday',
            sat: 'Saturday',
            sun: 'Sunday',
            concnCO2Tip1: '0~995PPM (No Pollution)',
            concnCO2Tip2: '996~1050PPM (Acceptable Range)',
            concnCO2Tip3: '1050~1500PPM (Low Pollution)',
            concnCO2Tip4: '1500~1800PPM (Moderate Pollution)',
            concnCO2Tip5: '1800~2000PPM (High Pollution)',
            concnCO2Tip6: '2000PPM (Severe Pollution)',
            concnHCHOTip1: 'Qualified 0~99μg/m3',
            concnHCHOTip2: 'Exceeded 100~2680μg/m3',
            concnPM2Dot5Tip1: 'Excellent 0~75μg/m3',
            concnPM2Dot5Tip2: 'Good 75~115μg/m3',
            concnPM2Dot5Tip3: 'Poor 115~μg/m3',
            concnTVOC: 'Total Volatile Organic Compounds (TVOC) Value',
            conditionRoot: 'Condition',
            typeRoot: 'Type',
            timeCondition: 'Time Condition',
            deviceCondition: 'Device Condition',
            task: 'Task',
            add485Device: 'Add 485 Device',
            edit485Device: 'Edit 485 Device Configuration',
            test: 'Power Switch Test',
            IrDevice: 'Infrared Device',
            IrCodeLibrary: 'Infrared Code Library',
            delectIrDevice: 'This operation will delete the device. Continue?',
            brand: 'Brand',
            modelText: 'Model',
            functionButton: 'Function Button',
            studyDevice: 'Learn Device',
            testTip:
                'Please test the remote control functions. Save after successful testing',
            controlSuccess: 'Control Successful',
            controlFail: 'Control Failed',
            saveIng:
                '<div><i class="el-icon-time" style="color: #13ce66; font-size: 20px"></i><span style="font-size: 16px">Saving, please wait...</span></div>',
            addMethod: 'Add Method',
            matchMethod: 'Match Method',
            note: 'Note:',
            tip1: '(1) Ensure',
            tip2: 'the infrared treasure is in normal working condition',
            and: 'and',
            tip3: 'the remote control is powered on',
            tip4: '(2) Click [Start Pairing], the indicator light of the infrared treasure device will be on. Point the',
            tip5: 'infrared emission light of the remote control at the infrared treasure',
            tip6: 'and press any button on the remote control for a long time until the indicator light of the infrared treasure goes out.',
            tip7: '(2) Click [Start Learning], point the',
            tip8: 'and press any button on the remote control for a long',
            startPair: 'Start Pairing',
            pairTip: 'Pairing Tips',
            rePair: 'Re-Pair',
            pairIng: 'Pairing in Progress, Please Wait...',
            pairFail: 'Pairing Failed, Please Retry!',
            addCustomButton: 'Add Custom Button',
            buttonName: 'Button Name:',
            startLearn: 'Start Learning',
            learnIng: 'Learning in Progress, Please Wait...',
            learnFail: 'Learning Failed, Please Retry!',
            reStudy: 'Re-Learn',
            learnSuccess: 'Learning Successful, Save?',
        },
        monitor: {
            batchUpgrade: 'Batch Upgrade',
            queryDetail: 'Query Details',
            deviceCodeAlias: 'Device ID',
            sortAlias: 'Device Sorting',
            deviceCodeAliasPlaceholder: 'Enter Device ID',
            deviceName: 'Device Name',
            deviceNamePlaceholder: 'Enter Device Name',
            deviceType: 'Device Type',
            deviceTypePlaceholder: 'Select Device Type',
            baseInfo: 'Basic Information',
            deviceStatus: 'Device Status',
            needUpdateDeviceTip: 'Please select devices to upgrade first',
            fileAddressPlaceholder: 'Select Firmware Package',
            monitorDeviceManageTip:
                'Specify the bed device for forwarding fall radar alarms, not configured to default door machine forwarding',
            monitorDeviceManageTip1: 'Enter the correct format for',
            monitorDeviceManageTip2: 'Check the data on the first page',
            monitorDeviceManageTip3:
                'After the upgrade, please wait for 1~2 minutes',
            monitorDeviceManageTip4:
                'Upgrade command sent successfully, please wait for device upgrade',
            otherSetting: 'Other Settings',
            deviceInstallHeight: 'Installation Height',
            cmUnit: 'Centimeters',
            sortwareInfo: 'Software Information',
            deviceRadarPackVersion: 'Radar Firmware Package Version',
            deviceWifiPackVersion: 'WIFI Firmware Package Version',
            deviceProductMode: 'Product Model',
            deviceProductId: 'Product ID',
            deviceHardwareModel: 'Hardware Model',
            deviceWorkDuration: 'Work Duration',
            readyUpgrade: 'Ready for Upgrade',
            fileAddress: 'Firmware Package',
            beginUpgrade: 'Start Upgrade',
        },
        batchSetting: {
            issuedDevice: 'Issue Devices',
            deviceBatchSettingTip:
                'This operation will issue devices, do you want to continue?',
            issuedSuccessTip: 'Issued successfully',
            deviceBatchSettingTip1:
                'Sleep monitoring start time cannot be equal to sleep monitoring end time!',
            deviceBatchSettingTip2:
                'Please check the fall detection radar configuration',
            paramSetting: 'Parameter Configuration',
            tumbleAlarmDelayTime: 'Fall Alarm Delay Time',
            tumbleAlarmDelayTimeTip: 'Timing starts after detecting a fall',
            tumbleAlarmDelayTimeTip1: 'Residence Alarm Time',
            hostAlarmStatus: 'Residence Alarm',
            hostAlarmDelayTimeTip:
                "Timing starts after detecting someone's presence",
            hostAlarmStartTime: 'Residence Monitoring Period',
            seconds: 'Seconds',
            heartRateAbnormalPromptTime: 'Heart Rate Abnormal Prompt Delay',
            heartRateAbnormalPromptTimeTip:
                'Timing starts after detecting abnormal heart rate',
            abnormalBreathPromptTime: 'Abnormal Breathing Prompt Delay',
            abnormalBreathPromptTimeTip:
                'Timing starts after detecting abnormal breathing',
            sleepMonitorStartTime: 'Sleep Monitoring Time',
            deviceBatchSettingTip3:
                'Note: Sleep daily reports will be generated immediately after the set monitoring time ends each day',
            deviceCheckTip1:
                'Please check the vital signs detection radar configuration',
            deviceCheckTip2:
                'Please check the fall detection radar configuration',
            startTimePlaceholder: 'Please select start time',
            endTimePlaceholder: 'Please select end time',
            hostAlarmStatusTimePlaceholder: 'Enter residence alarm time',
        },
        network: {
            deviceCode: 'Device SN',
            deviceName: 'Device Name',
            deviceType: 'Device Type',
            deviceTypePlaceholder: 'Select Device Type',
            roomName: 'Room Number',
            deviceStatus: 'Device Status',
            ip: 'IP Address',
            saveAutoCreated: 'Automatically generated after saving',
            deviceNamePlaceholder: 'Enter Device Name',
            ipPlaceholder: 'Enter IP Address',
            subnetMask: 'Subnet Mask',
            subnetMaskPlaceholder: 'Enter Subnet Mask',
            gateway: 'Gateway Address',
            gatewayPlaceholder: 'Enter Gateway Address',
            incorrectFormat: 'Incorrect Format',
        },
    },
    agency: {
        info: {
            agencyInfo: 'Agency Information',
            uploadPicture: 'Upload Agency Picture',
            agencyName: 'Agency Name',
            orgCode: 'Organization Code',
            address: 'Address',
            telephone: 'Telephone',
            agencyNamePlaceholder: 'Enter Agency Name',
            orgCodePlaceholder: 'Enter Organization Code',
        },
        region: {
            regionName: 'Name',
            regionCode: 'Code',
            sort: 'Sort',
            remark: 'Remark',
            action: 'Action',
            areaNamePlaceholder: 'Enter Area Name',
            buildingNamePlaceholder: 'Enter Building Name',
            floorNamePlaceholder: 'Enter Floor Name',
            roomNamePlaceholder:
                'Enter Room Number, only supports input of up to 5 digits',
            sortPlaceholder: 'Enter Sort',
            remarkPlaceholder: 'Enter Remark, up to 300 characters',
            saveAutoCreated: 'Automatically generated after saving',
            doorTemplate: 'Doorplate Template',
            doorTemplatePlaceholder: 'Select Doorplate Template',
            addBuilding: 'Add Building',
            addFloor: 'Add Floor',
            addRoom: 'Add Room',
            addArea: 'Add Area',
            building: 'Building',
            floor: 'Floor',
            room: 'Room',
            area: 'Area',
            buildingName: 'Building Name',
            floorName: 'Floor Name',
            roomName: 'Room Number',
            areaName: 'Area Name',
            buildingCode: 'Building Code',
            floorCode: 'Floor Code',
            roomCode: 'Room Code',
            areaCode: 'Area Code',
            buildingNamePlaceholderSelect: 'Select Building Name',
            floorNamePlaceholderSelect: 'Select Floor Name',
            roomNamePlaceholderSelect: 'Select Room Number',
            areaNamePlaceholderSelect: 'Select Area Name',
            activityName: 'Activity Name',
        },
    },
    log: {
        platform: {
            commandStatus: 'Command Status',
            commandSend: 'Command Sender',
            commandReceive: 'Command Receiver',
            commandObjectId: 'Control Object ID',
            commandObjectType: 'Control Object Type',
            commandContent: 'Create Content',
            receiveUnprocessed: 'Receive Unprocessed',
            receiveProcessed: 'Receive Processed',
            receiveError: 'Command Error',
            gatewayDevice: 'Gateway Device',
            scenes: 'Scenes',
            commandSwpLogId: 'Platform Instruction ID',
        },
        service: {
            serviceName: 'Service Project Name',
            serviceNamePlaceholderSelect: 'Select Service Name',
            serviceStartTime: 'Service Check-in Time',
            serviceEndTime: 'Service End Time',
            serviceTime: 'Service Duration',
            serviceStartTimeStart: 'Service Start Time',
            serviceStartTimeEnd: 'Service Check-in Start Time',
            serviceEndTimeEnd: 'Service Check-in End Time',
        },
    },
    group: {
        main: {
            callGroupCode: 'Group Code',
            callGroupName: 'Group Name',
            buildingName: 'Building Name',
            deviceType: 'Device Type',
            baseInfo: 'Basic Information',
            autoGenerate: 'Automatically generated after saving',
            remarkLimitedPlaceholder: 'Enter Remark, up to 300 characters',
            deviceMember: 'Device Members',
            SnOrName: 'Device SN/Device Name',
            deviceSN: 'Device SN',
            deviceName: 'Device Name',
            deviceList: 'Device List',
            selected: 'Selected',
        },
    },
    identity: {
        user: {
            name: 'Name',
            userType: 'User Type',
            doorUserTypePlaceholder: 'Select User Type',
            ifsendCard: 'Whether to Issue Card',
            sendCard: 'Issue Card',
            batchSendCard: 'Batch Issue Card',
            cardReader: 'Card Reader Service Connection Status:',
            cardSuccess: 'Card Swiped Successfully! Card Number:',
            copy: 'Copy',
            numbering: 'Numbering',
            cardNo: 'Card Number',
            validityPeriod: 'Validity Period',
            previewFace: 'Preview Face',
            face: 'Face',
            disable: 'Disable',
            notConnect: 'Not Connected',
            userAuthority: 'User Authority',
            lordICCarde: 'Main IC Card Number',
            cardReading: 'Connected, Card Reading Detection in Progress',
            cardError:
                'Card Reader Service Connection Error, trying to reconnect...',
            cardEnvironmentError:
                'Card Reader Service Connection Failed, please check the card reader environment!',
            cardConnetSuccess: 'Card Reader Connection Successful!',
            optionWillDisable:
                'This operation will disable this data, continue?',
            disableSuccess: 'Disabled Successfully!',
            noImage: 'No image available for the current user!',
            photograph: 'Take a Photo',
            startAlias: 'Start',
            stop: 'Stop',
            age: 'Age',
            sex: 'Gender',
            phoneAlias: 'Phone Number',
            reportLoss: 'Report Loss',
            replacementCard: 'Replace Card',
            logoff: 'Log Off',
            cardRecord: 'Card Record',
            optionText: 'Operation',
            cardSay: 'Card Description',
            cannotzero: 'Card number cannot be zero!',
            cannotNegative: 'Card number cannot be negative!',
            cannotEmpty: 'Card number cannot be empty when not logged off!',
            faceError:
                'Face information is incorrect, please upload a clear face photo!',
            ifConfirm: 'Are you sure',
            inputCard:
                'Enter the new card number (swipe the card or enter the card number to issue the card)',
            legalNumber: 'Legal number',
            browserDisable: 'Browser permissions are disabled',
            noFind: 'Not Found',
            please: 'Please',
            color: 'Color',
            noCard: ' users have not filled in the card number!',
            uploadExcelTip: 'Click to upload Excel file',
            importTemplateDownload: 'Download Import Template',
            uploadSuccessTip:
                'Upload Successful! Success Count: {insertNum}, Update Count: {updateNum}, Failure Count: {failNum}.',
            photoText: 'Camera',
            photoTextTip: 'Please turn on the camera',
            automatically: 'Automatically generated',
            batchPublishTip: 'Please select users to issue cards',
        },
        time: {
            templateNo: 'Template Code',
            passTime: 'Passing Time',
        },
        permission: {
            roleGroupName: 'Role Group Name',
            roleGroupNo: 'Role Group Number',
            isOpen: 'Is Open',
            doorTimeTemplateId: 'Access Time Template',
            doorTimeTemplateIdPlaceholder: 'Select Access Time Template',
            selectDevice: 'Select Device',
            buildPromt:
                'Note: Select a device before selecting a building name',
            noSelectDevice: 'No device selected',
            selectedDevice: 'Selected Devices',
            buildNotify: 'Please select a building first',
        },
    },
    activity: {
        main: {
            activityCode: 'Activity Code',
            activityName: 'Activity Name',
            autoGenerate: 'Automatically generated after saving',
            remarkLimitedPlaceholder: 'Enter Remark, up to 300 characters',
            rangeTime: 'Time Range',
            monday: 'Monday',
            tuesday: 'Tuesday',
            wednesday: 'Wednesday',
            thursday: 'Thursday',
            friday: 'Friday',
            saturday: 'Saturday',
            sunday: 'Sunday',
            timeConflict:
                'Time conflict on the same day, please modify and resubmit!',
            maxlength: '20',
            plan: 'Activity Plan',
        },
    },
    statistical: {
        messageBackup: {
            buildingIdPlaceholder: 'Select Building',
            floorIdPlaceholder: 'Select Floor',
            roomNamePlaceholder: 'Enter Room Number',
            devicePlaceholder: 'Enter Device SN/Device Name',
            recordStartTime: 'Send Start Time',
            recordEndTime: 'Send End Time',
            uploadStartTime: 'Upload Start Time',
            uploadEndTime: 'Upload End Time',
            backupLimit: 'Backup Limit',
            download: 'Download',
            detail: 'Detail',
            downloadTip: 'Please select the file to download!',
            buildingName: 'Building Name',
            floorName: 'Floor Name',
            roomName: 'Room Number',
            deviceName: 'Device Name',
            deviceCode: 'Device SN',
            recordType: 'Message Type',
            text: 'Text',
            voice: 'Voice',
            recordTime: 'Send Time',
            uploadTime: 'Upload Time',
            recordDuration: 'Duration',
            messageBakupTitle: 'Message and Photo Backup Capacity Settings',
            totalServerCapacity: 'Total Server Capacity:',
            keepTime: 'Maximum Retention Time:',
            keepTimeTip:
                'Old backups are deleted first beyond the retention time',
            limitCapacity: 'Maximum Limited Capacity:',
            limitCapacityTip:
                'Old backups are deleted first beyond the capacity',
            updateTip: 'Are you sure to modify the backup limit?',
            recordTypePlaceholder: 'Select Message Type',
            downloadErrorTip:
                'Please select the correct message record to download',
            fileName: 'message_',
        },
        callInfo: {
            passwordPlaceholder: 'Enter Password',
            exportSearch: 'Export Search Items',
            callFrom: 'Call Source',
            callTo: 'Call Target',
            callModeName: 'Call Type',
            callModeCodePlaceholder: 'Select Call Type',
            callStartTime: 'Call Start Time',
            callEndTime: 'Call End Time',
            callFromPlaceholder: 'Enter Call Source',
            callToPlaceholder: 'Enter Call Target',
            callStartTimePlaceholder: 'Select Call Start Time',
            callEndTimePlaceholder: 'Call End Time (Automatically generated)',
            callText: 'Normal Call',
            helpText: 'Request for Reinforcement',
            bathroomAlarm: 'Bathroom Alarm',
        },
        callEvent: {
            passwordPlaceholder: 'Enter Password',
            exportSearch: 'Export Search Items',
            callFrom: 'Call Source',
            callTo: 'Call Target',
            callModeName: 'Call Type',
            callStartTime: 'Call Start Time',
            callEndTime: 'Call End Time',
            callFromPlaceholder: 'Enter Call Source',
            callToPlaceholder: 'Enter Call Target',
            callStartTimePlaceholder: 'Select Call Start Time',
            callEndTimePlaceholder: 'Call End Time (Automatically generated)',
            talkStartTime: 'Answer Start Time',
            callMessage: 'Call Content',
            buildingName: 'Building Name',
            floorName: 'Floor Name',
            roomName: 'Room Number',
            areaName: 'Area Name',
            eventStatus: 'Processing Result',
            eventStatusPlaceholder: 'Select Processing Result',
            isDeal: 'Processed',
            noDeal: 'Unprocessed',
            callModePlaceholder: 'Select Call Type',
        },
        alarmEvent: {
            passwordPlaceholder: 'Enter Password',
            exportSearch: 'Export Search Items',
            callFrom: 'Call Source',
            callTo: 'Call Target',
            callModeName: 'Alarm Event Type',
            callModePlaceholder: 'Select Alarm Event Type',
            callStartTime: 'Alarm Start Time',
            callEndTime: 'Alarm End Time',
            callFromPlaceholder: 'Enter Call Source',
            callToPlaceholder: 'Enter Call Target',
            callStartTimePlaceholder: 'Select Call Start Time',
            callEndTimePlaceholder: 'Call End Time (Automatically generated)',
            talkStartTime: 'Alarm Processing Time',
            callMessage: 'Call Content',
            buildingName: 'Building Name',
            floorName: 'Floor Name',
            roomName: 'Room Number',
            areaName: 'Area Name',
            eventStatus: 'Processing Result',
            eventStatusPlaceholder: 'Select Processing Result',
            isDeal: 'Processed',
            noDeal: 'Unprocessed',
            toiletAlarm: 'Bathroom Alarm',
            dismantAlarm: 'Disassembly Alarm',
            deviceTypeId: 'device type',
        },
        access: {
            buildingName: 'Building Name',
            floorName: 'Floor Name',
            deviceName: 'Device Name',
            deviceCode: 'Device SN',
            buildingNamePlaceholderSelect: 'Select Building',
            accessStatus: 'Access Status',
            accessStatusPlaceholder: 'Select Access Status',
            out: 'Out',
            in: 'In',
            openType: 'Unlock Type',
            openTypePlaceholder: 'Select Unlock Type',
            devicePlaceholder: 'Enter Device SN/Device Name',
            openTime: 'Door Open Time',
            openTimePlaceholder: 'Select Door Open Start Time',
            closingTime: 'Select Door Open End Time',
            cardNo: 'Operator',
            cardNoPlaceholder: 'Enter Operator',
        },
        sendCard: {
            doorUserRealname: 'User Name',
            doorUserStatus: 'User Status',
            buildingName: 'Building Name',
            floorName: 'Floor Name',
            roomName: 'Room Number',
            areaName: 'Area Name',
            floorNamePlaceholderSelect: 'Select Floor',
            roomNamePlaceholderSelect: 'Select Room Number',
            areaNamePlaceholderSelect: 'Select Area Name',
            cardNo: 'Card Number',
            cardNoPlaceholder: 'Enter Card Number',
            createUser: 'Card Issuer',
            createUserPlaceholder: 'Enter Card Issuer',
            createTime: 'Card Issuing Time',
            buildingNamePlaceholderSelect: 'Select Building',
            startTimePlaceholder: 'Select Start Time',
            endTimePlaceholder: 'Select End Time',
            doorUserRealnamePlaceholder: 'Enter User Name',
            unEnable: 'Not Enabled',
            isEnable: 'Enabled',
            doorUserType: 'User Type',
            doorUserTypePlaceholder: 'Select User Type',
        },
        cardLog: {
            doorUserRealname: 'User Name',
            doorUserStatus: 'User Status',
            buildingName: 'Building Name',
            floorName: 'Floor Name',
            roomName: 'Room Number',
            areaName: 'Area Name',
            floorNamePlaceholderSelect: 'Select Floor',
            roomNamePlaceholderSelect: 'Select Room Number',
            areaNamePlaceholderSelect: 'Select Area Name',
            cardNo: 'Card Number',
            cardNoPlaceholder: 'Enter Card Number',
            createUser: 'Operator',
            createUserPlaceholder: 'Enter Operator',
            createTime: 'Operation Time',
            buildingNamePlaceholderSelect: 'Select Building',
            startTimePlaceholder: 'Select Start Time',
            endTimePlaceholder: 'Select End Time',
            doorUserRealnamePlaceholder: 'Enter User Name',
            unEnable: 'Not Enabled',
            isEnable: 'Enabled',
            cardOperationType: 'Card Operation Type',
            cardOperationTypePlaceholder: 'Select Card Operation Type',
            doorUserType: 'User Type',
            doorUserTypePlaceholder: 'Select User Type',
        },
    },
    serviceCenter: {
        orderFoodService: {
            // Order food service management
            basicInfo: 'Basic Information',
            foodImg: 'Food Image',
            foodName: 'Food Name',
            price: 'Unit Price',
            foodDesc: 'Food Description',
            isEnable: 'Is Enabled',
            historySales: 'Historical Sales',
            createdTime: 'Creation Time',
        },
        dispatchCarService: {
            // Vehicle dispatch service management
            basicInfo: 'Basic Information',
            carNo: 'License Plate Number',
            carType: 'Vehicle Type',
            carLoad: 'Capacity',
            driverName: 'Driver Name',
            driverIdCard: 'Driver ID Card Number',
            driverLicenseNo: "Driver's License Number",
            getCardTime: 'First Issuance Date',
            driverAge: 'Driving Experience (Years)',
            phone: 'Contact Phone',
            validityPeriod: 'License Validity Period',
            startTime: 'Start Time',
            endTime: 'End Time',
            idCardErrorTip: 'Incorrect ID Card Number',
            phoneErrorTip: 'Incorrect Phone Number',
            identityInfo: 'Identification Information',
            carStatus: 'Vehicle Status',
            driverAgePlaceholder:
                'Automatically calculated after selecting the first issuance date',
            // Vehicle Status
            idle: 'Idle',
            dispatch: 'Dispatching',
            repair: 'Under Repair',
            booked: 'Booked',
        },
    },

    workOrder: {
        orderNo: 'Order Number',
        serviceType: 'Service Type',
        serviceTypePlaceholder: 'Select Service Type',
        orderPlacer: 'Order Placer',
        orderPlacerPlaceholder: 'Select Order Placer',
        contactWay: 'Contact Method',
        contactWayPlaceholder: 'Enter Contact Method',
        appointmentTime: 'Appointment Time',
        createTime: 'Creation Time',
        orderStatus: 'Order Status',
        orderStatusPlaceholder: 'Select Order Status',
        finish: 'Finish',
        sendCar: 'Dispatch Car',
        orderMeal: 'Order Meal',
        finished: 'Completed',
        unfinished: 'Uncompleted',
        startTimePlaceholder: 'Select Appointment Start Time',
        endTimePlaceholder: 'Select Appointment End Time',
        appointmentTimePlaceholder: 'Select Appointment Time',
        finishPlaceholder:
            'Please ensure that the service is completed, otherwise it may have adverse consequences. Complete this work order?',
        autoPlaceholder: 'Auto-generated after saving',
        originPlace: 'Origin',
        destination: 'Destination',
        destinationPlaceholder: 'Enter Destination',
        passengersNum: 'Number of Passengers',
        passengersNumPlaceholder: 'Enter Number of Passengers',
        source: 'Source',
        dishCount: 'Total Price',
        dishCountPlaceholder: 'Auto-calculated after saving',
        foodName: 'Dish Name',
        price: 'Unit Price',
        foodCount: 'Quantity',
        dish: 'Dish',
        dishPlaceholder: 'Select Dish',
        appointmentTimeErrPlaceholder:
            'Please select the correct appointment time!',
    },
};
export default keyword;
